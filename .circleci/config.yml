version: 2.1

jobs:
  build-service:
    docker:
      - image: alexfalkowski/go:1.7
    working_directory: ~/konfig
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          name: restore go deps
          keys:
            - konfig-build-service-go-cache-{{ checksum "go.sum" }}
            - konfig-build-service-go-cache-
      - restore_cache:
          name: restore ruby deps
          keys:
            - konfig-build-service-ruby-cache-{{ checksum "test/Gemfile.lock" }}
            - konfig-build-service-ruby-cache-
      - run: make dep
      - save_cache:
          name: save go deps
          key: konfig-build-service-go-cache-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - save_cache:
          name: save ruby deps
          key: konfig-build-service-ruby-cache-{{ checksum "test/Gemfile.lock" }}
          paths:
            - test/vendor
      - restore_cache:
          name: restore go build cache
          keys:
            - konfig-build-service-go-build-cache-{{ checksum "go.sum" }}
            - konfig-build-service-go-build-cache-
      - run: make lint
      - run: make proto-breaking
      - run: make sec
      - run: make build analyse
      - save_cache:
          name: save go build cache
          key: konfig-build-service-go-build-cache-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/.cache/go-build
    resource_class: large
  build-docker:
    docker:
      - image: alexfalkowski/go:1.7
    working_directory: ~/konfig
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make build-docker
      - run: make trivy
    resource_class: large
  features-config:
    docker:
      - image: alexfalkowski/go:1.7
      - image: localstack/localstack:3.4
        environment:
          SERVICES: s3,ssm
      - image: hashicorp/vault:1.16
        environment:
          VAULT_DEV_ROOT_TOKEN_ID: vault-plaintext-root-token
      - image: grafana/mimir:latest
        command: -server.http-listen-port=9009 -auth.multitenancy-enabled=false -ingester.ring.replication-factor=1
    working_directory: ~/konfig
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: dockerize -wait tcp://localhost:8200 -wait tcp://localhost:4566 -wait tcp://localhost:9009 -timeout 1m
      - restore_cache:
          name: restore go deps
          keys:
            - konfig-features-config-go-cache-{{ checksum "go.sum" }}
            - konfig-features-config-go-cache-
      - restore_cache:
          name: restore ruby deps
          keys:
            - konfig-features-config-ruby-cache-{{ checksum "test/Gemfile.lock" }}
            - konfig-features-config-ruby-cache-
      - run: make dep
      - save_cache:
          name: save go deps
          key: konfig-features-config-go-cache-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - save_cache:
          name: save ruby deps
          key: konfig-features-config-ruby-cache-{{ checksum "test/Gemfile.lock" }}
          paths:
            - test/vendor
      - restore_cache:
          name: restore go build cache
          keys:
            - konfig-features-config-go-build-cache-{{ checksum "go.sum" }}
            - konfig-features-config-go-build-cache-
      - run: make setup-secret features-config
      - save_cache:
          name: save go build cache
          key: konfig-features-config-go-build-cache-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/.cache/go-build
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: test/reports
      - run: make leave-coverage
      - persist_to_workspace:
          root: test
          paths:
            - reports
    resource_class: large
  features-secrets:
    docker:
      - image: alexfalkowski/go:1.7
      - image: localstack/localstack:3.4
        environment:
          SERVICES: s3,ssm
      - image: hashicorp/vault:1.16
        environment:
          VAULT_DEV_ROOT_TOKEN_ID: vault-plaintext-root-token
      - image: grafana/mimir:latest
        command: -server.http-listen-port=9009 -auth.multitenancy-enabled=false -ingester.ring.replication-factor=1
    working_directory: ~/konfig
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: dockerize -wait tcp://localhost:8200 -wait tcp://localhost:4566 -wait tcp://localhost:9009 -timeout 1m
      - restore_cache:
          name: restore go deps
          keys:
            - konfig-features-secrets-go-cache-{{ checksum "go.sum" }}
            - konfig-features-secrets-go-cache-
      - restore_cache:
          name: restore ruby deps
          keys:
            - konfig-features-secrets-ruby-cache-{{ checksum "test/Gemfile.lock" }}
            - konfig-features-secrets-ruby-cache-
      - run: make dep
      - save_cache:
          name: save go deps
          key: konfig-features-secrets-go-cache-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - save_cache:
          name: save ruby deps
          key: konfig-features-secrets-ruby-cache-{{ checksum "test/Gemfile.lock" }}
          paths:
            - test/vendor
      - restore_cache:
          name: restore go build cache
          keys:
            - konfig-features-secrets-go-build-cache-{{ checksum "go.sum" }}
            - konfig-features-secrets-go-build-cache-
      - run: make setup-secret features-secrets
      - save_cache:
          name: save go build cache
          key: konfig-features-secrets-go-build-cache-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/.cache/go-build
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: test/reports
      - run: make leave-coverage
      - persist_to_workspace:
          root: test
          paths:
            - reports
    resource_class: large
  features-coverage:
    docker:
      - image: alexfalkowski/go:1.7
    working_directory: ~/konfig
    steps:
      - checkout
      - attach_workspace:
          at: test
      - run: git submodule sync
      - run: git submodule update --init
      - run: make coverage
      - store_artifacts:
          path: test/reports
      - run: make codecov-upload
    resource_class: large
  release:
    docker:
      - image: alexfalkowski/release:3.5
    working_directory: ~/konfig
    steps:
      - checkout
      - run: release
    resource_class: large
  push-docker:
    docker:
      - image: alexfalkowski/go:1.7
    working_directory: ~/konfig
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: make login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run: make push-docker
    resource_class: large

workflows:
  konfig:
    jobs:
      - build-service
      - build-docker:
          context: gh
      - features-config
      - features-secrets
      - features-coverage:
          requires:
            - features-config
            - features-secrets
      - release:
          context: gh
          requires:
            - build-service
            - build-docker
            - features-coverage
          filters:
            branches:
              only: master
      - push-docker:
          context: docker
          requires:
            - release
          filters:
            branches:
              only: master
