syntax = "proto3";

package konfig.v1;

option go_package = "github.com/alexfalkowski/konfig/api/konfig/v1";
option ruby_package = "Konfig::V1";

// Config for a specific application.
message Config {
  string application = 1;
  string version = 2;
  string environment = 3;
  string continent = 4;
  string country = 5;
  string command = 6;
  string kind = 7;
  bytes data = 8;
}

// GetConfigRequest for a specific application.
message GetConfigRequest {
  string application = 1;
  string version = 2;
  string environment = 3;
  string continent = 4;
  string country = 5;
  string command = 6;
  string kind = 7;
}

// GetConfigResponse for a specific application.
message GetConfigResponse {
  map<string, string> meta = 1;
  Config config = 2;
}

// GetSecretsRequest a map of name and secret.
message GetSecretsRequest {
  map<string, string> secrets = 1;
}

// GetSecretsResponse a map of meta and secrets.
message GetSecretsResponse {
  map<string, string> meta = 1;
  map<string, bytes> secrets = 2;
}

// Service allows to manage all application configurations.
service Service {
  // GetConfig for a specific application.
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {}

  // GetSecrets that are configured.
  rpc GetSecrets(GetSecretsRequest) returns (GetSecretsResponse) {}
}
